// 21.09.2022
// Виконала:
// Студентка 3 курсу
// Групи КІ - 20009б
// Струтинська Катерина
// 
// Варіант 16 (4)
// Створити клас «куля», такий, що:
// а) його екземпляр містить розмір радіусу.
// b) його конструктор без параметра створює екземпляр зі значенням 0, а конструктор з параметрами створює екземпляр з відповідним значенням радіусу.
// c) його методи дозволяють отримувати і присвоювати значення радіусу і обчислювати значення об'єму.
// d) операція « << » перевантажена : виводить на екран значення радіуса і об'єму кулі.
// e) операція « + » перевантажена : для двох куль створює нову кулю сумарного об’єму.Радіус нової кулі має бути перевизначений.
// g) операція «++» збільшує радіус кулі на одиницю.

#include <iostream>
#include <ostream>
#include <conio.h>
#define Pi 3,14
using namespace std;

class Sphere // початок класу
{
	double r; // радіус
	double v; // об'єм
public:
	Sphere() // конструктор без параметра зі значенням 0
	{
		r = 0;
	}
	Sphere(double R) // конструктор з параметром
	{
		r = R;
		v = 4 * Pi * r * r * r / 3;
	}
	Sphere operator +(const Sphere& sph) // операція перевантаження"+" яка створює нову кулю та вираховує об'єм із суми об'ємів двох куль
	{
		Sphere nm(this->v + sph.v);
		return nm;
	}
	Sphere operator ++ (int notused)// операція перевантаження "++"  збільшує радіус на одиницю
	{
		Sphere t = *this;
		r++;
		return t;
	}
	friend ostream& operator <<(ostream& t, const Sphere& sph); // операція "<<" яка виводить значення радіуса і об'єма

};

ostream& operator << (ostream& t, const Sphere& sph) // операція "<<" яка виводить значення радіуса і об'єма
{
	t << "r=" << sph.r << ", v=" << sph.v << endl;
	return t;
}
int main()
{
	Sphere a(21), b(13);
	Sphere c = a + b;
	cout << a << b << c;
	a = c++;
	cout << a;
	cout << c;
	_getch();
}